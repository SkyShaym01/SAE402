openapi: 3.0.0
info:
  title: Actors, Genres & Movies API
  description: API for managing actors, genres, and movies
  version: 1.0.0
servers:
  - url: http://localhost:3000/actors
    description: Local server
  - url: http://localhost:3000/genres
    description: Local server
  - url: http://localhost:3000/movies
    description: Local server
  - url: http://localhost:3000/movies-actors
    description: Local server
  - url: http://localhost:3000/movies-genres
    description: Local server
paths:
  /actors/:
    get:
      summary: Get all actors
      description: Fetches all actors from the database
      responses:
        '200':
          description: A list of actors
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
        '500':
          description: Internal server error
  /actors/random:
    get:
      summary: Get a random actor
      description: Fetches a random actor from the database
      responses:
        '200':
          description: A random actor
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
        '404':
          description: No actors found
        '500':
          description: Failed to fetch random actor
  /actors/{id}:
    get:
      summary: Get actor by ID
      description: Fetches an actor by their ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: An actor object
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
        '404':
          description: Actor not found
        '500':
          description: Internal server error
  /genres/:
    get:
      summary: Get all genres
      description: Fetches all genres from the database
      responses:
        '200':
          description: A list of genres
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
        '500':
          description: Internal server error
  /genres/{id}:
    get:
      summary: Get genre by ID
      description: Fetches a genre by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A genre object
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
        '404':
          description: Genre not found
        '500':
          description: Internal server error
  /movies/:
    get:
      summary: Get all movies
      description: Fetches all movies from the database
      responses:
        '200':
          description: A list of movies
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        year:
                          type: integer
        '500':
          description: Internal server error
  /movies/random:
    get:
      summary: Get a random movie
      description: Fetches a random movie from the database
      responses:
        '200':
          description: A random movie
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  year:
                    type: integer
        '404':
          description: No movies found
        '500':
          description: Failed to fetch random movie
  /movies/{id}:
    get:
      summary: Get movie by ID
      description: Fetches a movie by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A movie object
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  year:
                    type: integer
        '404':
          description: Movie not found
        '500':
          description: Internal server error
  /movies-actors/:
    get:
      summary: Get all actor-movie relations
      description: Fetches all relations between actors and movies
      responses:
        '200':
          description: A list of relations
  /movies-actors/actor/{id}:
    get:
      summary: Get movie-actor relations by actor ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A list of actor-movie relations
  /movies-actors/movie/{id}:
    get:
      summary: Get movie-actor relations by movie ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A list of actor-movie relations
  /movies-genres/:
    get:
      summary: Get all movie-genre relations
      description: Fetches all relations between movies and genres
      responses:
        '200':
          description: A list of relations
  /movies-genres/{id}:
    get:
      summary: Get movie-genre relation by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A movie-genre relation
